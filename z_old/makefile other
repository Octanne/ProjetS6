#
# MAIN CONFIGURATION
#
EXEC = Serveur/serveur Client/client Editeur/editeur
EXEC_C = serveur client editeur
INCLUDES = includes/ Client/includes/ Editeur/includes/ Serveur/includes/
#OBJECTS= exemple.o
PROJECT_NAME = ProjetS6

OBJECTS_DIR = obj
INCLUDE_DIR = $(addprefix -iquote ,$(INCLUDES) $(wildcard $(addsuffix */, $(INCLUDES))))
BIN_DIR = bin

OBJECTS_O = ${OBJECTS} ${EXEC_O}

#
# SUFFIXES (must not change it)
#
.SUFFIXES: .c .o

#
# ARGUMENTS AND COMPILER (to configure)
#
CC = gcc
CCFLAGS_STD = -Wall -O3 -Werror
CCFLAGS_DEBUG = -D _DEBUG_
CCFLAGS = $(CCFLAGS_STD)
CCLIBS = -lpthread -lncurses

#
# RULES (must not change it)
#
all: msg $(addprefix $(OBJECTS_DIR)/,$(OBJECTS)) $(addprefix $(OBJECTS_DIR)/,$(EXEC_O))
	@echo "Create executables..."
	@for i in $(EXEC_C); do \
	$(CC) -o $(addprefix $(BIN_DIR)/,$$i) $(addprefix $(OBJECTS_DIR)/,$$i.o) $(addprefix $(OBJECTS_DIR)/,$(OBJECTS)) $(CCLIBS) $(INCLUDE_DIR); \
	done
	@echo "Done."

msg:
	@echo "Create objects..."

debug: CCFLAGS = $(CCFLAGS_STD) $(CCFLAGS_DEBUG)
debug: all

#
# DEFAULT RULES (must not change it)
#

$(addprefix $(OBJECTS_DIR)/,%.o) : $(addprefix includes/,%.c)
	@echo "Generating $@"
	@${CC} ${CCFLAGS} -c $< -o $@ $(INCLUDE_DIR)

#
# MAIN RULES (must not change it)
#

# You can add your own commands
clean:
	@echo "Delete objects, temporary files..."
	@rm -f $(addprefix $(OBJECTS_DIR)/,$(OBJECTS_O))
	@rm -f $(addprefix $(OBJECTS_DIR)/,$(EXEC_O))
	@rm -f $(addprefix $(OBJECTS_DIR)/,*~) $(addprefix $(OBJECTS_DIR)/,*#)
	@rm -f $(addprefix $(BIN_DIR)/,$(EXEC))
	@rm -f dependancies
	@echo "Done."

depend:
	@echo "Create dependancies..."
	@sed -e "/^# DEPENDANCIES/,$$ d" makefile > dependancies
	@echo "# DEPENDANCIES" >> dependancies
	@echo "OBJECTS =" >> objs.temp
	@echo "EXEC_O =" >> objs_exec.temp

	@echo "Exec : $(EXEC)";
	@for i in $(EXEC); do \
	o_name=$(OBJECTS_DIR)/`echo $$i | sed "s/\(.*\)\/\(.*\)$$/\2.o/"`; \
	c_name=$$i.c; \
	echo "dependancies for $$o_name & $$c_name..."; \
	$(CC) -MM -MT $$o_name $(CCFLAGS) $$c_name $(INCLUDE_DIR) >> dependancies; \
	echo `echo $$i | sed "s/\(.*\)\/\(.*\)$$/\2.o/"` >> objs_exec.temp; \
	done
	
	@echo "Includes : $(INCLUDES)";
	@for FOLDER in $(INCLUDES); do \
	echo "Folder : $$FOLDER"; \
	files_c=`find $$FOLDER -mindepth 1 -maxdepth 1 -type d`; \
	for i in $$files_c; do \
	o_name=$(OBJECTS_DIR)/`echo $$i | sed "s/\(.*\)\/\(.*\)$$/\2.o/"`; \
	c_name=$$i/`echo $$i | sed "s/\(.*\)\/\(.*\)$$/\2.c/"`; \
	echo "dependancies for $$o_name & $$c_name..."; \
	$(CC) -MM -MT $$o_name $(CCFLAGS) $$c_name $(INCLUDE_DIR) >> dependancies; \
	echo `echo $$i | sed "s/\(.*\)\/\(.*\)$$/\2.o/"` >> objs.temp; \
	done; \
	done;

	@echo " " >> dependancies
	@# replace \n by space on objs.temp
	@tr '\n' ' ' < objs.temp > objs.temp.new && mv objs.temp.new objs.temp
	@# remove the last space on objs.temp
	@sed -i 's/ *$$//' objs.temp
	@# replace \n by space on objs_exec.temp
	@tr '\n' ' ' < objs_exec.temp > objs_exec.temp.new && mv objs_exec.temp.new objs_exec.temp
	@# remove the last space on objs_exec.temp
	@sed -i 's/ *$$//' objs_exec.temp
	@cat objs.temp >> dependancies
	@echo " " >> dependancies
	@cat objs_exec.temp >> dependancies
	@cat dependancies > makefile
	@rm dependancies
	@rm objs.temp objs_exec.temp
	@echo "Done."

# DEPENDANCIES
obj/serveur.o: Serveur/serveur.c
obj/client.o: Client/client.c includes/level/level.h \
 includes/liste/liste.h includes/objet/objet.h includes/utils/utils.h \
 includes/utils/constants.h includes/utils/st_benchmark.h \
 Client/includes/level_update/level_update.h \
 Client/includes/client_gui/client_gui.h
obj/editeur.o: Editeur/editeur.c includes/level/level.h \
 includes/liste/liste.h includes/objet/objet.h includes/utils/utils.h \
 includes/utils/constants.h includes/utils/st_benchmark.h \
 Editeur/includes/level_edit/level_edit.h \
 Editeur/includes/system_save/system_save.h \
 Editeur/includes/editor_gui/editor_gui.h
obj/level.o: includes/level/level.c includes/level/level.h \
 includes/liste/liste.h includes/objet/objet.h includes/utils/utils.h \
 includes/utils/constants.h includes/utils/st_benchmark.h
obj/utils.o: includes/utils/utils.c includes/utils/utils.h \
 includes/utils/constants.h includes/utils/st_benchmark.h
obj/liste.o: includes/liste/liste.c includes/liste/liste.h \
 includes/objet/objet.h includes/utils/utils.h includes/utils/constants.h \
 includes/utils/st_benchmark.h
obj/objet.o: includes/objet/objet.c includes/objet/objet.h \
 includes/utils/utils.h includes/utils/constants.h \
 includes/utils/st_benchmark.h
obj/level_update.o: Client/includes/level_update/level_update.c \
 Client/includes/level_update/level_update.h includes/level/level.h \
 includes/liste/liste.h includes/objet/objet.h includes/utils/utils.h \
 includes/utils/constants.h includes/utils/st_benchmark.h
obj/client_gui.o: Client/includes/client_gui/client_gui.c \
 Client/includes/client_gui/client_gui.h includes/level/level.h \
 includes/liste/liste.h includes/objet/objet.h includes/utils/utils.h \
 includes/utils/constants.h includes/utils/st_benchmark.h
obj/editor_gui.o: Editeur/includes/editor_gui/editor_gui.c \
 Editeur/includes/editor_gui/editor_gui.h includes/level/level.h \
 includes/liste/liste.h includes/objet/objet.h includes/utils/utils.h \
 includes/utils/constants.h includes/utils/st_benchmark.h
obj/level_edit.o: Editeur/includes/level_edit/level_edit.c \
 Editeur/includes/level_edit/level_edit.h includes/level/level.h \
 includes/liste/liste.h includes/objet/objet.h includes/utils/utils.h \
 includes/utils/constants.h includes/utils/st_benchmark.h
obj/system_save.o: Editeur/includes/system_save/system_save.c \
 Editeur/includes/system_save/system_save.h includes/level/level.h \
 includes/liste/liste.h includes/objet/objet.h includes/utils/utils.h \
 includes/utils/constants.h includes/utils/st_benchmark.h
 
OBJECTS = level.o utils.o liste.o objet.o level_update.o client_gui.o editor_gui.o level_edit.o system_save.o 
EXEC_O = serveur.o client.o editeur.o